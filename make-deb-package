#!/bin/sh

# run from anywhere
APP_DIR_FULL=$(realpath "$0")
APP_DIR=$(dirname "$APP_DIR_FULL")
cd "$APP_DIR" || exit 1

# find version
VERSION="$(head -n1 <Changelog | sed 's/ v//g')"

# variables
NAME="zeit"
README="Readme.md"
RELEASES="releases"
TARGET="DEBIAN"
PATH_BUILD="./build"
PATH_BASE="./$RELEASES/$NAME-$VERSION"
PATH_INSTALL="$PATH_BASE/usr"
PATH_BIN="$PATH_INSTALL/bin"
PATH_SHARE="$PATH_INSTALL/share/$NAME"
PATH_LIB="$PATH_INSTALL/lib"
PATH_TARGET="$PATH_BASE/$TARGET"

# delete the old build
echo "Cleaning up old build"
rm -rf "$PATH_BASE" "$PATH_BUILD"

# modify source
sed -i "s|<KAuth/ExecuteJob>|<KAuth/KAuthExecuteJob>|g" src/helper/zeithelper.h
sed -i "s|<KAuth//HelperSupport>|<KAuth/KAuthHelperSupport>|g" src/helper/zeithelper.h
sed -i "s|<KAuth/Action>|<KAuth/KAuthAction>|g" crontablib/ctcron.cpp
sed -i "s|<KAuth/ExecuteJob>|<KAuth/KAuthExecuteJob>|g" crontablib/ctcron.cpp

# bulding binaries
CURRENT_DIR=$(pwd)
mkdir -p "$PATH_BUILD" || exit 1
cd "$PATH_BUILD" || exit 1
cmake .. || exit 1
make -j2 || exit 1
cd "$CURRENT_DIR" || exit 1

# copy relevant files from source to release
echo "Copying relevant source files"
mkdir -p "$PATH_SHARE" "$PATH_BIN" "$PATH_LIB"
cp -t "$PATH_SHARE" "$README" "Copying" || exit 1
cp -t "$PATH_BIN" "build/src/$NAME" || exit 1
cp -P -t "$PATH_LIB" "build/crontablib/libcrontab.s"* || exit 1

# get description
DESCRIPTION="Qt frontend to crontab and at"

# create Debian control file
echo "Creating CONTROL file"
mkdir -p "$PATH_TARGET"
echo "Package: $NAME
Version: $VERSION
Section: utils
Priority: optional
Architecture: all
Depends: cron, libkf5authcore5
Maintainer: Bodo Endres <dev@muspekaren.se>
Description: $DESCRIPTION
" >"$PATH_TARGET/control"

# build
echo "Building"
fakeroot dpkg-deb --build "$PATH_BASE"

echo "Cleaning up old build"
rm -rf "$PATH_BASE" "$PATH_BUILD"

# pack source files
echo "Packing source"
zip -q -r "$RELEASES/$NAME-$VERSION.source.zip" ./* \
    -x $RELEASES\* \
    -x .*\* \
    -x ./*DEV_\*
wait

# replace latest version
cp "$PATH_BASE.deb" "$RELEASES/$NAME-LATEST.deb"
cp "$PATH_BASE.source.zip" "$RELEASES/$NAME-LATEST-source.zip"

# clean up
echo "Clean up"
rm -rf "$PATH_BASE"

# check
echo "Checking:"
lintian -c "$PATH_BASE.deb"
