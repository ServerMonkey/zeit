#!/bin/sh

# run from anywhere
APP_DIR_FULL=$(realpath "$0")
APP_DIR=$(dirname "$APP_DIR_FULL")
cd "$APP_DIR" || exit 1

# find version
VERSION="$(head -n1 <Changelog | sed 's/ v//g')"

# variables
NAME="zeit"
EXE="build/src/$NAME"
README="Readme.md"
RELEASES="releases"
TARGET="DEBIAN"
MAN_PAGE=1
FILE_MAN="$NAME.$MAN_PAGE"
PATH_BASE="./$RELEASES/$NAME-$VERSION"
PATH_INSTALL="$PATH_BASE/usr/local"
PATH_BIN="$PATH_INSTALL/bin"
PATH_SHARE="$PATH_INSTALL/share/$NAME"
PATH_TARGET="$PATH_BASE/$TARGET"
PATH_MAN="$PATH_INSTALL/share/man/man$MAN_PAGE"

# delete the old build
echo "Cleaning up old build"
rm -rf "$PATH_BASE"

# copy relevant files from source to release
echo "Copying relevant source files"
mkdir -p "$PATH_SHARE" "$PATH_BIN" "$PATH_MAN"
cp -t "$PATH_SHARE" "$README" "Copying" || exit 1
chmod 0755 "$EXE"
cp -t "$PATH_BIN" "$EXE" || exit 1

## build man page
#ronn -r <"$README" | gzip -9n >"$PATH_MAN/$FILE_MAN" || exit 1

# get description
DESCRIPTION="Qt frontend to crontab and at"

# create Debian control file
echo "Creating CONTROL file"
mkdir -p "$PATH_TARGET"
echo "Package: $NAME
Version: $VERSION
Section: utility
Priority: optional
Architecture: all
Depends: cron
Maintainer: Bodo Endres <dev@muspekaren.se>
Description: $DESCRIPTION
" >"$PATH_TARGET/control"

# build
echo "Building"
fakeroot dpkg-deb --build "$PATH_BASE"

# pack source files
echo "Packing source"
zip -q -r "$RELEASES/$NAME-$VERSION.source.zip" ./* \
	-x $RELEASES\* \
	-x .*\* \
	-x ./*DEV_\*
wait

# replace latest version
cp "$PATH_BASE.deb" "$RELEASES/$NAME-LATEST.deb"
cp "$PATH_BASE.source.zip" "$RELEASES/$NAME-LATEST-source.zip"

# clean up
echo "Clean up"
rm -rf "$PATH_BASE"

# check
echo "Checking:"
lintian -c "$PATH_BASE.deb"
